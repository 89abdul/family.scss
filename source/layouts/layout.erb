<!doctype html>
<html>
<head>
  <meta content="IE=edge" http-equiv="X-UA-Compatible">
  <meta charset="utf-8">
  <meta content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no" name="viewport">
  <link rel="icon" type="image/png" href="images/favicon.png" />
  <!-- Use title if it's in the page YAML frontmatter -->
  <title><%= current_page.data.title || "Middleman" %></title>

  <link href='//fonts.googleapis.com/css?family=Lato:300,400' rel='stylesheet' type='text/css'>
  <link href="stylesheets/site.css" rel="stylesheet" />
</head>

<body class="<%= page_classes %>">

  <%= yield %>

  <script src="javascripts/all.js"></script>
  <script src="javascripts/demo.js"></script>
  <script src="javascripts/vendors/sass.sync.js"></script>
  <script src="javascripts/vendors/prism.js"></script>
  <script src="javascripts/vendors/codeflask.js"></script>
</body>

<script>

var familyScss = `@mixin first($num) { @for $i from 0 to $num + 1 { &:nth-child(#{$i}) { @content } } } @mixin last($num) { @for $i from 0 to $num + 1 { &:nth-last-child(#{$i}) { @content } } } @mixin after-first($num) { &:nth-child(n+#{$num + 1}) { @content } } @mixin from-end($num) { &:nth-last-child(#{$num}) { @content } } @mixin between($first,$last) { &:nth-child(n+#{$first}):nth-child(-n+#{$last}) { @content } } @mixin pair-between($first,$last) { &:nth-child(even):nth-child(n + #{$first}):nth-child(-n + #{$last}) { @content } } @mixin impair-between($first,$last) { &:nth-child(odd):nth-child(n + #{$first}):nth-child(-n + #{$last}) { @content } } @mixin n-between($num,$first,$last) { &:nth-child(#{$num}n):nth-child(n + #{$first}):nth-child(-n + #{$last}) { @content } } @mixin all-but($num) { &:not(:nth-child(#{$num})) { @content } } @mixin each($num) { &:nth-child(#{$num}n) { @content } } @mixin every($num) { @include each($num) { @content } } @mixin from-first-last($num) { &:nth-child(#{$num}), &:nth-last-child(#{$num}) { @content } } @mixin middle($num) { &:nth-child(#{round($num/2)}){ @content } } @mixin all-but-first-last($num) { &:nth-child(n+#{$num}):nth-last-child(n+#{$num}){ @content } } @mixin first-of($limit) { &:nth-last-child(#{$limit}):first-child { @content } } @mixin last-of($limit) { &:nth-of-type(#{$limit}):nth-last-of-type(1){ @content } } @mixin pair() { &:nth-child(even) { @content } } @mixin even(){ @include pair { @content } } @mixin impair() { &:nth-child(odd) { @content } } @mixin odd(){ @include impair { @content } } @mixin first-last() { &:first-child, &:last-child { @content } } @mixin unique() { &:only-child { @content } } @mixin not-unique() { &:not(:only-child) { @content } } @mixin only() { @include unique(){ @content } } @mixin child-index($num, $direction: 'forward', $index: 0) { @for $i from 1 through $num { @if $direction == 'forward' { &:nth-child(#{$i}) { z-index: orderIndex($i, $index, $direction); @content; } } @if $direction == 'backward' { &:nth-last-child(#{$i}) { z-index: orderIndex($i, $index, $direction); @content; } } } } @function orderIndex($i, $index, $direction){ @if $direction == 'forward' { $i:$index + $i; } @else { $i:$index - $i; } @return $i }`;
var flask = new CodeFlask;
flask.run('#sass', {
 language: 'css'
});

var sassPanel = document.querySelector('#sass');
var scss = sassPanel.textContent;

var codebloc = document.querySelector('.CodeFlask__textarea');
var prebloc = document.querySelector('.CodeFlask__pre code');
var exVal = codebloc.value.replace(/^\s*|\s*$/g,'');
codebloc.value = exVal;
prebloc.innerHTML = exVal;

Sass.compile(familyScss+scss, function(result) {
  var css = result.text;
  if (css) {
    document.querySelector('#css').innerHTML = css;
    Prism.highlightElement( document.querySelector('#css'));

  } else {
    document.querySelector('#css').innerHTML = 'Not valid Sass'
  }
});
// flask.update(playground);
flask.onUpdate(function(code) {
  var sassPanel = document.querySelector('#sass');
  var scss = sassPanel.textContent;

  Sass.compile(familyScss+scss, function(result) {
    document.querySelector('#css').innerHTML = result.text
    Prism.highlightAll();
  });


  Prism.highlightElement(sassPanel);
  var scss = sassPanel.textContent;
});

</script>

</html>
